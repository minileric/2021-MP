import numpy as np

#Рязанов Петр, дата рождения 16.07.2001

# y'+ (2y+1)*ctg(x)=0
# это уравнение с разделяющимися переменными
# y'/(2y+1) = -ctg(x)
# dy/(2y+1) = -ctg(x) * dx
#интегрируем обе части
# 0.5ln(2y+1) = - ln(sin(x) - ln(C1)
# ln (sqrt(2y+1)) = - ln(C1 * sin(x))
#sqrt(2y+1) = 1/(C1 * sin(x))
#2y+1 = 1/(C0* sin(x)**2)
#y = 1/(2*C0 * sin(x)**2) - 1/2
C=2001+7**3#константа которая вылазит при интегрировании
func= lambda x: 1/ (C*2 * np.sin(x)**2)-1/2#функциональное программирование
#уравнение получено аналитически
a=0#начальное приближение
b=100
c=1#перменная нужная для метода
eps=10**(-12)#эпсилон для проверки
i=0
while True:
    c=(a+b)/2 #середина отрезка
    if(func(b)*func(c)<0): #если график между правой границей и серединой отрезка пересечет границу, значит где-то между ними есть корень
        a=c # берем новый отсчет, сдвигаясь на половину отрезка
    else:
        b=c  
    if ((b-a)<eps):
        break
    i+=1
print("Корень функции x=",b , "; Значение функции в этой точке равно = ",func(a))
